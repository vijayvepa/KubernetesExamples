MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k get secrets
NAME                  TYPE                                  DATA   AGE
db-passwords          Opaque                                2      15h
default-token-sz4rq   kubernetes.io/service-account-token   3      8d
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k delete secrets db-passwords
secret "db-passwords" deleted
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k delete -f .k8s
configmap "mongo-env" deleted
storageclass.storage.k8s.io "local-storage" deleted
persistentvolume "mongo-pv" deleted
persistentvolumeclaim "mongo-pvc" deleted
statefulset.apps "mongo" deleted
service "mongo" deleted
deployment.apps "nginx" deleted
service "nginx" deleted
configmap "node-env" deleted
deployment.apps "node" deleted
service "node" deleted
deployment.apps "redis" deleted
service "redis" deleted
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k apply -f .k8s
configmap/mongo-env created
storageclass.storage.k8s.io/local-storage created
persistentvolume/mongo-pv created
persistentvolumeclaim/mongo-pvc created
statefulset.apps/mongo created
service/mongo created
deployment.apps/nginx created
service/nginx created
configmap/node-env created
deployment.apps/node created
service/node created
deployment.apps/redis created
service/redis created
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k get all
NAME                         READY   STATUS             RESTARTS   AGE
pod/docker-volume            1/1     Running            1          20h
pod/mongo-0                  1/1     Terminating        0          20m
pod/my-busy-box              0/1     CrashLoopBackOff   189        4d21h
pod/nginx-6fcdc7b59f-vj74t   1/1     Running            0          4s
pod/nginx-alpine-volume      2/2     Running            0          20h
pod/node-55f9b5cd69-khm4g    1/1     Running            0          3s
pod/node-55f9b5cd69-v4cqj    1/1     Terminating        0          20m
pod/redis-7d7fd78c88-6svv7   1/1     Running            0          3s

NAME                 TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
service/kubernetes   ClusterIP      10.96.0.1        <none>        443/TCP                      8d
service/mongo        ClusterIP      10.98.237.102    <none>        27017/TCP                    4s
service/nginx        LoadBalancer   10.99.9.108      localhost     80:32046/TCP,443:31093/TCP   3s
service/node         ClusterIP      10.102.238.126   <none>        8080/TCP                     3s
service/redis        ClusterIP      10.110.130.185   <none>        6379/TCP                     3s

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx   1/1     1            1           4s
deployment.apps/node    1/1     1            1           3s
deployment.apps/redis   1/1     1            1           3s

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6fcdc7b59f   1         1         1       4s
replicaset.apps/node-55f9b5cd69    1         1         1       3s
replicaset.apps/redis-7d7fd78c88   1         1         1       3s

NAME                     READY   AGE
statefulset.apps/mongo   0/1     4s
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k get pods --watch
NAME                     READY   STATUS             RESTARTS   AGE
docker-volume            1/1     Running            1          20h
mongo-0                  1/1     Terminating        0          21m
my-busy-box              0/1     CrashLoopBackOff   189        4d21h
nginx-6fcdc7b59f-vj74t   1/1     Running            0          25s
nginx-alpine-volume      2/2     Running            0          20h
node-55f9b5cd69-khm4g    1/1     Running            0          24s
node-55f9b5cd69-v4cqj    1/1     Terminating        0          21m
redis-7d7fd78c88-6svv7   1/1     Running            0          24s
node-55f9b5cd69-v4cqj    0/1     Terminating        0          21m
mongo-0                  0/1     Terminating        0          21m
^CMACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k describe pod mongo-0
Name:               mongo-0
Namespace:          default
Priority:           0
PriorityClassName:  <none>
Node:               docker-desktop/192.168.65.3
Start Time:         Mon, 14 Oct 2019 06:12:25 -0400
Labels:             app=mongo
                    controller-revision-hash=mongo-7b5f75c76c
                    statefulset.kubernetes.io/pod-name=mongo-0
Annotations:        <none>
Status:             Pending
IP:                 10.1.0.72
Controlled By:      StatefulSet/mongo
Containers:
  mongo:
    Container ID:   
    Image:          codewithdan/mongo
    Image ID:       
    Port:           27017/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       CreateContainerConfigError
    Ready:          False
    Restart Count:  0
    Environment:
      MONGODB_DBNAME:         <set to the key 'MONGODB_DBNAME' of config map 'mongo-env'>         Optional: false
      MONGODB_PASSWORD:       <set to the key 'db-password' in secret 'db-passwords'>             Optional: false
      MONGODB_ROLE:           <set to the key 'MONGODB_ROLE' of config map 'mongo-env'>           Optional: false
      MONGODB_ROOT_PASSWORD:  <set to the key 'db-root-password' in secret 'db-passwords'>        Optional: false
      MONGODB_ROOT_ROLE:      <set to the key 'MONGODB_ROOT_ROLE' of config map 'mongo-env'>      Optional: false
      MONGODB_ROOT_USERNAME:  <set to the key 'MONGODB_ROOT_USERNAME' of config map 'mongo-env'>  Optional: false
      MONGODB_USERNAME:       <set to the key 'MONGODB_USERNAME' of config map 'mongo-env'>       Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-sz4rq (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  default-token-sz4rq:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-sz4rq
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type     Reason          Age               From                     Message
  ----     ------          ----              ----                     -------
  Normal   Scheduled       14s               default-scheduler        Successfully assigned default/mongo-0 to docker-desktop
  Normal   SandboxChanged  13s               kubelet, docker-desktop  Pod sandbox changed, it will be killed and re-created.
  Normal   Pulled          9s (x4 over 13s)  kubelet, docker-desktop  Container image "codewithdan/mongo" already present on machine
  Warning  Failed          9s (x4 over 13s)  kubelet, docker-desktop  Error: secret "db-passwords" not found
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k get pod mongo-0 -o yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2019-10-14T10:12:25Z"
  generateName: mongo-
  labels:
    app: mongo
    controller-revision-hash: mongo-7b5f75c76c
    statefulset.kubernetes.io/pod-name: mongo-0
  name: mongo-0
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: mongo
    uid: 05e2de2e-ee6b-11e9-b152-025000000001
  resourceVersion: "77855"
  selfLink: /api/v1/namespaces/default/pods/mongo-0
  uid: 1e6a8168-ee6b-11e9-b152-025000000001
spec:
  containers:
  - env:
    - name: MONGODB_DBNAME
      valueFrom:
        configMapKeyRef:
          key: MONGODB_DBNAME
          name: mongo-env
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: db-password
          name: db-passwords
    - name: MONGODB_ROLE
      valueFrom:
        configMapKeyRef:
          key: MONGODB_ROLE
          name: mongo-env
    - name: MONGODB_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          key: db-root-password
          name: db-passwords
    - name: MONGODB_ROOT_ROLE
      valueFrom:
        configMapKeyRef:
          key: MONGODB_ROOT_ROLE
          name: mongo-env
    - name: MONGODB_ROOT_USERNAME
      valueFrom:
        configMapKeyRef:
          key: MONGODB_ROOT_USERNAME
          name: mongo-env
    - name: MONGODB_USERNAME
      valueFrom:
        configMapKeyRef:
          key: MONGODB_USERNAME
          name: mongo-env
    image: codewithdan/mongo
    imagePullPolicy: IfNotPresent
    name: mongo
    ports:
    - containerPort: 27017
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-sz4rq
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: mongo-0
  nodeName: docker-desktop
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: mongo
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-sz4rq
    secret:
      defaultMode: 420
      secretName: default-token-sz4rq
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2019-10-14T10:12:25Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2019-10-14T10:12:25Z"
    message: 'containers with unready status: [mongo]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2019-10-14T10:12:25Z"
    message: 'containers with unready status: [mongo]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2019-10-14T10:12:25Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: codewithdan/mongo
    imageID: ""
    lastState: {}
    name: mongo
    ready: false
    restartCount: 0
    state:
      waiting:
        message: secret "db-passwords" not found
        reason: CreateContainerConfigError
  hostIP: 192.168.65.3
  phase: Pending
  podIP: 10.1.0.72
  qosClass: BestEffort
  startTime: "2019-10-14T10:12:25Z"
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k get pods
NAME                     READY   STATUS                       RESTARTS   AGE
docker-volume            1/1     Running                      1          20h
mongo-0                  0/1     CreateContainerConfigError   0          74s
my-busy-box              1/1     Running                      190        4d21h
nginx-6fcdc7b59f-vj74t   1/1     Running                      0          116s
nginx-alpine-volume      2/2     Running                      0          20h
node-55f9b5cd69-khm4g    1/1     Running                      0          115s
redis-7d7fd78c88-6svv7   1/1     Running                      0          115s
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k logs mongo-0
Error from server (BadRequest): container "mongo" in pod "mongo-0" is waiting to start: CreateContainerConfigError
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k logs mongo-0 -p
Error from server (BadRequest): previous terminated container "mongo" in pod "mongo-0" not found
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k create secret generic db-passwords --from-literal=db-password='password' --from-literal=db-root-password='password'
secret/db-passwords created
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k apply .k8s
error: must specify one of -f and -k
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k apply -f .k8s
configmap/mongo-env unchanged
storageclass.storage.k8s.io/local-storage unchanged
persistentvolume/mongo-pv unchanged
persistentvolumeclaim/mongo-pvc unchanged
statefulset.apps/mongo configured
service/mongo unchanged
deployment.apps/nginx configured
service/nginx unchanged
configmap/node-env unchanged
deployment.apps/node configured
service/node unchanged
deployment.apps/redis configured
service/redis unchanged
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ k get pods
NAME                     READY   STATUS             RESTARTS   AGE
docker-volume            1/1     Running            1          20h
mongo-0                  1/1     Running            0          3m37s
my-busy-box              0/1     CrashLoopBackOff   191        4d21h
nginx-6fcdc7b59f-vj74t   1/1     Running            0          4m19s
nginx-alpine-volume      2/2     Running            0          20h
node-55f9b5cd69-khm4g    1/1     Running            0          4m18s
redis-7d7fd78c88-6svv7   1/1     Running            0          4m18s
MACC02RR83AG8WP:CodeWithDanDockerServices vijayvepakomma$ 